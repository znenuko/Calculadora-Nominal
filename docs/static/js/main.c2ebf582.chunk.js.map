{"version":3,"sources":["types/types.js","reducers/nominaReducer.js","store/store.js","reducers/authReducer.js","firebase/config-firebase.js","actions/nomina.js","components/Element.jsx","components/FormAdd.jsx","actions/auth.js","components/Navbar.jsx","pages/AppScreen.jsx","pages/LoginScreen.jsx","pages/RegisterScreen.jsx","routers/AuthRouter.jsx","routers/PrivateRouter.jsx","routers/PublicRouter.jsx","helpers/loadData.js","routers/AppRouter.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["types","initialState","data","reducers","combineReducers","auth","state","action","type","payload","nomina","filter","id","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","GoogleAuthProvider","crear","borrar","Element","fechaFormato","fecha","pago","dispatch","useDispatch","seconds","toDate","toLocaleDateString","onClick","getState","a","uid","doc","delete","borrarRegistro","className","FormAdd","useState","viewForm","setViewForm","precioHora","horas","cantidadPago","setCantidadPago","handleChange","e","target","name","value","htmlFor","onChange","datos","Date","collection","add","referencia","newData","login","displayName","Navbar","signOut","AppScreen","useSelector","map","elemento","LoginScreen","email","password","setData","onSubmit","preventDefault","trim","includes","length","signInWithEmailAndPassword","then","user","emailAndPasswordLogin","signInWithPopup","to","RegisterScreen","password2","username","createUserWithEmailAndPassword","updateProfile","register","AuthRouter","exact","path","component","PrivateRouter","log","Component","resto","props","PublicRouter","loadData","get","response","forEach","nominaData","push","AppRouter","setLog","useEffect","onAuthStateChanged","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.c2ebf582.chunk.js","sourcesContent":["export const types = {\n  login: \"[Auth] login\",\n  logout: \"[Auth] logout\",\n\n  nominaAdd: \"[Nomina] add\",\n  nominaDelete: \"[Nomina] delete\",\n  nominaRead: \"[Nomina] read\",\n  nominaClean: \"[Nomina] clean\",\n};\n","import { types } from \"../types/types\";\n\nconst initialState = {\n  data: [],\n};\n\nexport const nominaReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.nominaAdd:\n      return {\n        ...state,\n        data: [...state.data, action.payload],\n      };\n\n    case types.nominaRead:\n      return {\n        ...state,\n        data: action.payload,\n      };\n\n    case types.nominaDelete:\n      return {\n        ...state,\n        data: state.data.filter((nomina) => {\n          return nomina.id !== action.payload;\n        }),\n      };\n\n    case types.nominaClean:\n      return {\n        ...state,\n        data: [],\n      };\n\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport { authReducer } from \"../reducers/authReducer\";\nimport { nominaReducer } from \"../reducers/nominaReducer\";\n\nconst reducers = combineReducers({\n  auth: authReducer,\n  nomina: nominaReducer,\n});\n\nconst composeEnhancers =\n  (typeof window !== \"undefined\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nexport const store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import { types } from \"../types/types\";\n\nexport const authReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.login:\n      return action.payload;\n\n    case types.logout:\n      return {};\n\n    default:\n      return state;\n  }\n};\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD5YqD4LvpfvWSkbXQtgvT4bISYzfsEYYI\",\n  authDomain: \"crud-react-c0b05.firebaseapp.com\",\n  projectId: \"crud-react-c0b05\",\n  storageBucket: \"crud-react-c0b05.appspot.com\",\n  messagingSenderId: \"94329806393\",\n  appId: \"1:94329806393:web:ab9f9769474625cab137e8\",\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nexport { firebase, db, googleAuthProvider };\n","import { db } from \"../firebase/config-firebase\";\nimport { types } from \"../types/types\";\n\nexport const crearRegistro = (pago) => {\n  return async (dispatch, getState) => {\n    const { uid } = getState().auth;\n\n    const datos = {\n      fecha: new Date().toLocaleDateString(),\n      pago,\n    };\n\n    const referencia = await db.collection(`${uid}/nominas/nomina`).add(datos);\n\n    const id = await referencia.id;\n\n    const newData = {\n      ...datos,\n      id,\n    };\n\n    dispatch(crear(newData));\n  };\n};\n\nexport const leerRegistros = (data) => {\n  return {\n    type: types.nominaRead,\n    payload: data,\n  };\n};\n\nexport const crear = (data) => {\n  return {\n    type: types.nominaAdd,\n    payload: data,\n  };\n};\n\nexport const borrarRegistro = (id) => {\n  return async (dispatch, getState) => {\n    const { uid } = getState().auth;\n\n    await db.doc(`${uid}/nominas/nomina/${id}`).delete();\n\n    dispatch(borrar(id));\n  };\n};\n\nexport const borrar = (id) => {\n  return {\n    type: types.nominaDelete,\n    payload: id,\n  };\n};\n\nexport const limpiar = () => {\n  return {\n    type: types.nominaClean,\n  };\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { borrarRegistro } from \"../actions/nomina\";\n\nconst Element = ({ data }) => {\n  const { fecha, pago, id } = data;\n\n  const dispatch = useDispatch();\n\n  let fechaFormato;\n\n  if (fecha.seconds) {\n    const date = fecha.toDate();\n    fechaFormato = date.toLocaleDateString();\n  } else {\n    fechaFormato = fecha;\n  }\n\n  const handleDelete = () => {\n    dispatch(borrarRegistro(id));\n  };\n\n  return (\n    <>\n      <td>{fechaFormato}</td>\n      <td>${pago}</td>\n      <td>\n        <button onClick={handleDelete} className=\"btn red\">\n          <i className=\"material-icons\">delete_forever</i>\n        </button>\n      </td>\n    </>\n  );\n};\n\nexport default Element;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { crearRegistro } from \"../actions/nomina\";\n\nconst FormAdd = () => {\n  const dispatch = useDispatch();\n  const [viewForm, setViewForm] = useState(false);\n\n  const [cantidadPago, setCantidadPago] = useState({\n    precioHora: 0,\n    horas: 0,\n  });\n\n  const { precioHora, horas } = cantidadPago;\n\n  const handleAdd = () => {\n    setViewForm(!viewForm);\n  };\n\n  const handleChange = (e) => {\n    setCantidadPago({\n      ...cantidadPago,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSave = () => {\n    const cantidadFinal = horas * precioHora;\n\n    dispatch(crearRegistro(cantidadFinal));\n\n    setCantidadPago({\n      precioHora: 0,\n      horas: 0,\n    });\n  };\n\n  return (\n    <div>\n      <button onClick={handleAdd} className=\"btn green\">\n        {!viewForm ? \"Agregar\" : \"Cerrar\"}\n      </button>\n      {viewForm && (\n        <div className=\"animate__animated animate__fadeIn\">\n          <div className=\"input-field col s12\">\n            <label htmlFor=\"icon_prefix1\">Pago Por Hora: </label>\n            <input\n              id=\"icon_prefix1\"\n              type=\"text\"\n              value={precioHora}\n              onChange={handleChange}\n              name=\"precioHora\"\n            />\n          </div>\n\n          <div className=\"input-field col s12\">\n            <label htmlFor=\"icon_prefix2\">Horas Laboradas: </label>\n            <input\n              id=\"icon_prefix2\"\n              type=\"text\"\n              value={horas}\n              onChange={handleChange}\n              name=\"horas\"\n            />\n          </div>\n          <button onClick={handleSave} className=\"btn purple\">\n            Calcular y Guardar\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FormAdd;\n","import { types } from \"../types/types\";\n\nimport { firebase, googleAuthProvider } from \"../firebase/config-firebase\";\n\nexport const googleLogin = () => {\n  return (dispatch) => {\n    firebase\n      .auth()\n      .signInWithPopup(googleAuthProvider)\n      .then(({ user }) => {\n        dispatch(login(user.uid, user.displayName));\n      });\n  };\n};\n\nexport const emailAndPasswordLogin = (email, password) => {\n  return (dispatch) => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(({ user }) => {\n        dispatch(login(user.uid, user.displayName));\n      });\n  };\n};\n\nexport const register = (email, password, username) => {\n  return (dispatch) => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(async ({ user }) => {\n        await user.updateProfile({ displayName: username });\n\n        dispatch(login(user.uid, user.displayName));\n      });\n  };\n};\n\nexport const login = (uid, displayName) => {\n  return {\n    type: types.login,\n    payload: {\n      uid,\n      displayName,\n    },\n  };\n};\n\nexport const logout = () => {\n  return async (dispatch) => {\n    await firebase.auth().signOut();\n\n    dispatch({\n      type: types.logout,\n    });\n  };\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"../actions/auth\";\nimport { limpiar } from \"../actions/nomina\";\n\nconst Navbar = () => {\n  const dispatch = useDispatch();\n\n  const handleLogout = () => {\n    dispatch(limpiar());\n    dispatch(logout());\n  };\n\n  return (\n    <nav className=\"green\">\n      <div className=\"nav-wrapper\">\n        <span className=\"brand-logo\">Calculadora Nominal</span>\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n          <li>\n            <button\n              onClick={handleLogout}\n              className=\"btn red waves-effect waves-light\"\n            >\n              Logout\n            </button>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Element from \"../components/Element\";\nimport FormAdd from \"../components/FormAdd\";\n\nimport Navbar from \"../components/Navbar\";\n\nconst AppScreen = () => {\n  const name = useSelector((state) => state.auth.displayName);\n\n  const data = useSelector((state) => state.nomina.data);\n\n  return (\n    <>\n      <Navbar />\n\n      <div className=\"container animate__animated animate__backInUp\">\n        <h1 className=\"center\">Hola {name}</h1>\n        <hr />\n\n        <FormAdd />\n\n        <table>\n          <thead>\n            <tr>\n              <th>Fecha</th>\n              <th>Cantidad</th>\n              <th>Borrar</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {data.map((elemento) => {\n              return (\n                <tr\n                  className=\"animate__animated animate__fadeInUp \"\n                  key={elemento.id}\n                >\n                  <Element data={elemento} />\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n};\n\nexport default AppScreen;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport GoogleButton from \"react-google-button\";\nimport { Link } from \"react-router-dom\";\n\nimport { googleLogin, emailAndPasswordLogin } from \"../actions/auth\";\n\nconst LoginScreen = () => {\n  const [data, setData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const { email, password } = data;\n\n  const handleChange = (e) => {\n    const value = e.target.value;\n\n    setData({\n      ...data,\n      [e.target.name]: value,\n    });\n  };\n\n  const dispatch = useDispatch();\n\n  const handleGoogleLogin = () => {\n    dispatch(googleLogin());\n  };\n\n  const handleEmailLogin = (e) => {\n    e.preventDefault();\n\n    if (email.trim() === \"\" || !email.trim().includes(\"@\")) {\n      return;\n    }\n\n    if (password.trim().length < 6) {\n      return;\n    }\n\n    dispatch(emailAndPasswordLogin(email, password));\n  };\n\n  return (\n    <div className=\"container animate__animated animate__zoomIn\">\n      <h3>Login</h3>\n      <hr />\n\n      <div className=\"row container\">\n        <form onSubmit={handleEmailLogin} className=\"col s12\">\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <i className=\"material-icons prefix\">email</i>\n              <input\n                onChange={handleChange}\n                value={email}\n                name=\"email\"\n                id=\"icon_prefix1\"\n                className=\"materialize-textarea\"\n                type=\"email\"\n              />\n              <label htmlFor=\"icon_prefix1\">Email</label>\n            </div>\n            <div className=\"input-field col s12\">\n              <i className=\"material-icons prefix\">vpn_key</i>\n              <input\n                onChange={handleChange}\n                value={password}\n                name=\"password\"\n                id=\"icon_prefix2\"\n                className=\"materialize-textarea\"\n                type=\"password\"\n              />\n              <label htmlFor=\"icon_prefix2\">Password</label>\n            </div>\n          </div>\n\n          <button className=\"btn waves-effect waves-light\" type=\"submit\">\n            Enviar\n          </button>\n          <hr />\n          <GoogleButton onClick={handleGoogleLogin} />\n          <Link to=\"/auth/register\">Register in the platform</Link>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginScreen;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { register } from \"../actions/auth\";\n\nconst RegisterScreen = () => {\n  const dispatch = useDispatch();\n\n  const [data, setData] = useState({\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n    username: \"\",\n  });\n\n  const { email, username, password, password2 } = data;\n\n  const handleChange = (e) => {\n    const value = e.target.value;\n\n    setData({\n      ...data,\n      [e.target.name]: value,\n    });\n  };\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n    if (email.trim() === \"\" || !email.trim().includes(\"@\")) {\n      return;\n    }\n\n    if (username.trim().length < 2) {\n      return;\n    }\n\n    if (password.trim().length < 6) {\n      return;\n    } else {\n      if (password.trim() !== password2.trim()) {\n        return;\n      }\n    }\n\n    dispatch(register(email, password, username));\n  };\n\n  return (\n    <div className=\"container animate__animated animate__zoomIn\">\n      <h3>Register</h3>\n      <hr />\n\n      <div className=\"row container\">\n        <form onSubmit={handleRegister} className=\"col s12\">\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <i className=\"material-icons prefix\">email</i>\n              <input\n                onChange={handleChange}\n                value={email}\n                id=\"icon_prefix1\"\n                className=\"materialize-textarea\"\n                type=\"email\"\n                name=\"email\"\n              />\n              <label htmlFor=\"icon_prefix1\">Email</label>\n            </div>\n            <div className=\"input-field col s12\">\n              <i className=\"material-icons prefix\">assignment_ind</i>\n              <input\n                onChange={handleChange}\n                value={username}\n                id=\"icon_prefix2\"\n                className=\"materialize-textarea\"\n                name=\"username\"\n                type=\"text\"\n              />\n              <label htmlFor=\"icon_prefix2\">Username</label>\n            </div>\n            <div className=\"input-field col s12\">\n              <i className=\"material-icons prefix\">vpn_key</i>\n              <input\n                onChange={handleChange}\n                value={password}\n                id=\"icon_prefix3\"\n                className=\"materialize-textarea\"\n                name=\"password\"\n                type=\"password\"\n              />\n              <label htmlFor=\"icon_prefix3\">Password</label>\n            </div>\n            <div className=\"input-field col s12\">\n              <i className=\"material-icons prefix\">vpn_key</i>\n              <input\n                onChange={handleChange}\n                value={password2}\n                id=\"icon_prefix4\"\n                className=\"materialize-textarea\"\n                name=\"password2\"\n                type=\"password\"\n              />\n              <label htmlFor=\"icon_prefix4\">Confirm Password</label>\n            </div>\n          </div>\n\n          <button className=\"btn waves-effect waves-light\" type=\"submit\">\n            Enviar\n          </button>\n          <hr />\n          <Link to=\"/auth/login\">Login into account</Link>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterScreen;\n","import { Redirect, Route, Switch } from \"react-router-dom\";\n\nimport LoginScreen from \"../pages/LoginScreen\";\nimport RegisterScreen from \"../pages/RegisterScreen\";\n\nconst AuthRouter = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/auth/login\" component={LoginScreen} />\n      <Route exact path=\"/auth/register\" component={RegisterScreen} />\n\n      <Redirect to=\"/auth/login\" />\n    </Switch>\n  );\n};\n\nexport default AuthRouter;\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router\";\n\nconst PrivateRouter = ({ log, component: Component, ...resto }) => {\n  return (\n    <Route\n      {...resto}\n      component={(props) =>\n        log ? <Component {...props} /> : <Redirect to=\"/auth/login\" />\n      }\n    />\n  );\n};\n\nexport default PrivateRouter;\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router\";\n\nconst PublicRouter = ({ log, component: Component, ...resto }) => {\n  return (\n    <Route\n      {...resto}\n      component={(props) =>\n        log ? <Redirect to=\"/\" /> : <Component {...props} />\n      }\n    />\n  );\n};\n\nexport default PublicRouter;\n","import { db } from \"../firebase/config-firebase\";\n\nexport const loadData = async (uid) => {\n  const response = await db.collection(`${uid}/nominas/nomina`).get();\n  const data = [];\n\n  response.forEach((nomina) => {\n    const nominaData = nomina.data();\n\n    data.push({\n      id: nomina.id,\n      ...nominaData,\n    });\n  });\n\n  return data;\n};\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport AppScreen from \"../pages/AppScreen\";\nimport AuthRouter from \"./AuthRouter\";\nimport PrivateRouter from \"./PrivateRouter\";\n\nimport { login } from \"../actions/auth\";\nimport { firebase } from \"../firebase/config-firebase\";\nimport PublicRouter from \"./PublicRouter\";\nimport { loadData } from \"../helpers/loadData\";\nimport { leerRegistros } from \"../actions/nomina\";\n\nconst AppRouter = () => {\n  const dispatch = useDispatch();\n\n  const [log, setLog] = useState(false);\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(async (user) => {\n      if (user) {\n        dispatch(login(user.uid, user.displayName));\n        setLog(true);\n\n        const nominaData = await loadData(user.uid);\n\n        dispatch(leerRegistros(nominaData));\n      } else {\n        setLog(false);\n      }\n    });\n  }, [dispatch]);\n\n  return (\n    <Router>\n      <Switch>\n        <PublicRouter path=\"/auth\" component={AuthRouter} log={log} />\n        <PrivateRouter exact path=\"/\" log={log} component={AppScreen} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\n\nimport { store } from \"./store/store\";\n\nimport AppRouter from \"./routers/AppRouter\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorkerRegistration.register();\n\nreportWebVitals();\n"],"sourceRoot":""}